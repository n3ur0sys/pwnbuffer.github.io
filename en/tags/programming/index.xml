<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on pwnbuffer</title>
    <link>https://pwnbuffer.org/en/tags/programming/</link>
    <description>Recent content in Programming on pwnbuffer</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 30 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://pwnbuffer.org/en/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Review of assembly</title>
      <link>https://pwnbuffer.org/en/posts/slayer/assembly-review/</link>
      <pubDate>Wed, 30 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://pwnbuffer.org/en/posts/slayer/assembly-review/</guid>
      <description>What is assembly? Link to heading Assembly is a low-level programming language, it is written to communicate directly with the processor hardware. Unlike high-level languages, such as the famous Python, assembly operates close to machine code, the famous binary! Each assembly instruction generally represents a single CPU operation, such as moving data between registers, performing arithmetic operations or controlling the flow of execution.&#xA;Assembly is not universal!! It depends directly on the processor architecture.</description>
    </item>
    <item>
      <title>Bypassing Linux Kernel Defenses</title>
      <link>https://pwnbuffer.org/en/posts/black0ut/kernel_linux_bypass/</link>
      <pubDate>Wed, 02 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://pwnbuffer.org/en/posts/black0ut/kernel_linux_bypass/</guid>
      <description>lights off &amp;amp; black0ut on&#xA;1- Introduction Link to heading Hello, Welcome!!!&#xA;In this article, I will discuss how modern protections in the Linux Kernel hinder and mitigate rootkit functionalities, and of course, how to bypass them.&#xA;2- Kernel Address Space Layout Randomization (KASLR) Link to heading As one of the primary defense mechanisms of the Kernel and other systems, it randomizes the kernel&amp;rsquo;s memory addresses on each boot, making exploitation more difficult for attackers.</description>
    </item>
  </channel>
</rss>
